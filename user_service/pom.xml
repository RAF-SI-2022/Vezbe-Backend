<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>rs.edu.raf.si</groupId>
	<artifactId>user_service</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>user-service</name>
	<packaging>jar</packaging>
	<description>Demo user service za vezbe iz SI-a</description>

	<properties>
		<java.version>19</java.version>

		<!-- Vezbe 7 -->
		<!-- Ove parametre dodati kako jesu u pom.xml za svaki mikroservis -->
		<!-- Ovi parametri omogucavaju da radi Dockerfile koji dolazi uz mikroservis -->
		<revision>${project.version}</revision>
		<finalName>${project.artifactId}-${revision}</finalName>

		<!-- Vezbe 7 -->
		<!-- Ove parametre dodati kako jesu u pom.xml za svaki mikroservis -->
		<!-- Ovi parametri omogucavaju da radi JaCoCo (test coverage) -->
		<!-- SonarQube koristi JaCoCo kako bi vam pokazao informacije o test coverage-u -->
		<jacoco.version>0.8.8</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

		<!-- Vezbe 7 -->
		<!-- Ovo je opcioni parametar koji vam omogucava da neke klase iskljucite iz test coverage-a -->
		<!--<sonar.coverage.exclusions>**/config/*, **/model/*,**/repository/*,**/controller/response_forms/*,**/mail/*,**/security/otp/*,**/filter/*,**/cron/*</sonar.coverage.exclusions>-->

		<!-- Vezbe 7 -->
		<!-- Ovo je opcioni parametar koji vam omogucava da neke klase iskljucite iz code duplicate report-a -->
		<!--<sonar.cpd.exclusions>**/config/*,**/model/*</sonar.cpd.exclusions>-->
	</properties>

	<dependencies>
		<!-- Default dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-gson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
			<version>0.11.5</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Vezbe 2 -->
		<!-- OpenAPI Specification i Swagger dependencies -->
		<!-- Obavezno dodati ove dependencies u vase projekte, tj. u svaki mikroservis -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Vezbe 2 -->
		<!-- JUnit 5 framework - framework za testiranje -->
		<!-- Obavezno dodati ovaj dependency u vase projekte, tj. u svaki mikroservis -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.9.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Vezbe 2 -->
		<!-- Mockito Inline - koristi se za mockovanje statickih metoda -->
		<!-- Preporuceno je dodati ovaj dependency u vase projekte, tj. u svaki mikroservis -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>3.8.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Vezbe 3 -->
		<!-- Cucumber - koristi se za behavior-driven testiranje (BDD) -->
		<!-- Obavezno dodati ove dependencies u vase projekte, tj. u svaki mikroservis -->
		<!-- Napomena: obavezno prekopirati i test/resources/junit-platform.properties fajl -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>7.11.1</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>7.11.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>7.11.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<version>7.11.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Vezbe 7 -->
		<!-- Dodati u root pom.xml ako imate ili u svaki mikroservis -->
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.8</version>
		</dependency>

		<!-- Vezbe 8 -->
		<!-- Dodati u pom.xml za mikroservise koji koriste kesiranje (Redis) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- Vezbe 13 -->
		<!-- Dodati u pom.xml za mikroservise koji koriste monitoring (Prometheus) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- Vezbe 7 -->
		<!-- Obavezno dodati ovaj parametar u pom.xml za svaki mikroservis kako bi Dockerfile radio -->
		<finalName>${finalName}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Vezbe 7 -->
			<!-- Obavezno dodati ova tri plugina u pom.xml za svaki mikroservis kako bi Dockerfile radio -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- Ovde je Java 17 zato sto je to Java verzija u Maven Docker image-u -->
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Vezbe 7 -->
	<!-- Obavezno dodati ovaj profil u pom.xml za svaki mikroservis kako bi JaCoCo radio -->
	<profiles>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<id>jacoco-initialize</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
